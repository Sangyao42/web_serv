;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;   Representation Data and Metadata (RFC9110 8)   ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Content-Type        = media-type
media-type          = type "/" subtype parameters
type                = token
subtype             = token

Content-Language    = [ language-tag *( OWS "," OWS language-tag ) ]
language-tag        = <Language-Tag, see [RFC5646], Section 2.1>

Content-Length      = 1*DIGIT
Content-Location    = absolute-URI / partial-URI

//// not sure about Content-Location

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;   Validator fields (RFC9110 8.8)   ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Last-Modified       = HTTP-date

; ETag                = entity-tag
; entity-tag          = [ weak ] opaque-tag
; etagc               =
;  "!"
;  / %x23-7E ; '#'-'~'
;  / obs-text
; opaque-tag          = DQUOTE *etagc DQUOTE
; weak                = %x57.2F ; W/

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;   Methods (RFC9110 9)   ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

method              = token

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;   Response Context fields (RFC9110 10.2)   ;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Allow               = [ method *( OWS "," OWS method ) ]

Location            = URI-reference

Retry-After         = HTTP-date / delay-seconds
delay-seconds       = 1*DIGIT

Server              = product *( RWS ( product / comment ) )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;   HTTP Authentication (RFC9110 11)   ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

auth-scheme         = token
auth-param          = token BWS "=" BWS ( token / quoted-string )
token68             = 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" ) *"=" ; used for authentication

challenge           = auth-scheme [ 1*SP ( token68 / [ auth-param *( OWS "," OWS auth-param ) ] ) ]

WWW-Authenticate    = [ challenge *( OWS "," OWS challenge ) ]
Authentication-Info = [ auth-param *( OWS "," OWS auth-param ) ]
